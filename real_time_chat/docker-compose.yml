version: '3.8'

services:
  chat-app:
    build: .
    container_name: real_time_chat
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-default-secret-key-change-in-production}
      - PORT=5000
      - HOST=0.0.0.0
    volumes:
      - ./uploads:/app/uploads
      - ./chat_data.json:/app/chat_data.json
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - chat-network
    
  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: chat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - chat-app
    networks:
      - chat-network
    profiles:
      - with-nginx

networks:
  chat-network:
    driver: bridge

volumes:
  uploads_data:
  chat_data:
